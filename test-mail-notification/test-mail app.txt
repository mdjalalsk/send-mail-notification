appname:test-laravel-send-mail

pass :aphl tblo kxuv njoh

mdjalalsk02@gmail.com



// notification send step

** php artisan notifications:table    //for  create notification table **
** php artisan migrate
** php artisan make:notification  sendEmailNotification //for send email notification file

namespace App\Http\Controllers;

use App\Mail\jalalskmail;

use Illuminate\Support\Facades\Mail;
//some seting email notifications file
 private $details;
    /**
     * Create a new notification instance.
     */
    public function __construct($details)
    {
        $this->details = $details;
    }

//change and setting toMail method
  public function toMail(object $notifiable): MailMessage
    {
        return (new MailMessage)
                    ->greeting($this->details['greeting'])
                    ->line($this->details['body'])
                    ->action($this->details['actionText'], $this->details['actionUrl'])
                    ->line($this->details['lastLine']);
    }



//then make controller  for send email notification
php artisan make:controller sendEmailNotificationController

<?php

namespace App\Http\Controllers;

use App\Models\User;

use Illuminate\Support\Facades\Notification; // Added 'use' statement

use App\Notifications\sendEmailNotification;
class sendEmailNotificationController extends Controller
{
    public function sendEmailNotification()
    {
        $user=User::all();
        $details = [
            'greeting'=>" Hello Developer",
            'body'=>" I am very exciting for meting with you",
            'actionText'=>" Share your knowledge",
            'actionUrl'=>" /",
            'lastLine'=>" Thanks!",
        ];

     Notification::send($user,new SendEmailNotification($details));
}
}



//ceate notification route for wep.php file
Route::get('/emailNotification',[sendEmailNotificationController::class,'sendEmailNotification'] )->name('emailNotification');


//pdf generate
1. install a pakage for pdf generate
composer require barryvdh/laravel-dompdf

.2useing tinker and inser dummy users for users table

php artisan tinker

User::factory()->count(10)->create()

3. create a controller for pdf generate

php artisan make:controller PDFController

inside controller type flowing code

<?php

namespace App\Http\Controllers;
use App\Models\User;
// use Barryvdh\DomPDF\PDF;

use PDF;

class PDFController extends Controller
{
    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function generatePDF()
    {
        $users = User::get();

        $data = [
            'title' => 'Welcome to skit.com',
            'date' => date('m/d/Y'),
            'users' => $users
        ];

        $pdf = PDF::loadView('pdf.myPDF', $data);

        return $pdf->download('skit.pdf');
    }
}

4.create view which text and documet yoy will print inside pdf file
for example flowing code
<!DOCTYPE html>
<html>
<head>
    <title>Laravel 10 Generate PDF Example - ItSolutionStuff.com</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T" crossorigin="anonymous">
</head>
<body>
    <h1>{{ $title }}</h1>
    <p>{{ $date }}</p>
    <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod
    tempor incididunt ut labore et dolore magna aliqua.</p>

    <table class="table table-bordered">
        <tr>
            <th>ID</th>
            <th>Name</th>
            <th>Email</th>
        </tr>
        @foreach($users as $user)
        <tr>
            <td>{{ $user->id }}</td>
            <td>{{ $user->name }}</td>
            <td>{{ $user->email }}</td>
        </tr>
        @endforeach
    </table>

</body>
</html>
.5 create route for generate pdf


Route::get('generate-pdf', [PDFController::class, 'generatePDF']);

//how to add QR code in laravel project
1. install a pakage for scan QR code
composer require simplesoftwareio/simple-qrcode
 2. create  a conteoller
 php artisan make:controller QRCodeController
 enter flowing  code

<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
use SimpleSoftwareIO\QrCode\Facades\QrCode;


class QRCodeController extends Controller
{
    public function generateQRCode($text)
    {
        // Default values for email and phone,text
        $text = 'Welcome to the QRCode ';
        $email = 'example@example.com';
        $phone = '123456789';

        $vCardData = "BEGIN:VCARD\n"
                   . "VERSION:3.0\n"
                   . "EMAIL:$email\n"
                   . "TEL:$phone\n"
                   . "END:VCARD";

        $data = "$vCardData\nText:$text";

        $qrCode = QrCode::size(300)->generate($data);
        return view('qr-code', compact('qrCode'));
    }

}
3. create a Qr code view
<!DOCTYPE html>
<html>
<head>
    <title>QR Code</title>
</head>
<body>
    <h2>Contact Information QR Code</h2>
    <img src="data:image/png;base64,{{ base64_encode($qrCode) }}" alt="QR Code">
</body>
</html>

4. create a Qr code  route
